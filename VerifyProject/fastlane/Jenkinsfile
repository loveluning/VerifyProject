pipeline {
	agent any   // 你也可以使用 agent {label 'mac_for_iOS'}
	environment {
		BASH_PROFILE='~/.bashrc'
  	}

	stages {
    	stage('拉取项目') {
      		steps {
        		git 'https://github.com/loveluning/VerifyProject.git'
     		 }
    	}

   		stage('生成配置文件') {
      		steps {
        		dir('./VerifyProject/fastlane') {
          			sh "bundle exec fastlane ios config_generate param:'${params.module}'"
        		}
      		}
    	}

    	stage('配置Podfile') {
      		steps {
        		dir('./VerifyProject/fastlane') {
          			sh 'bundle exec fastlane ios config_pod'
        		}
      		}
    	}

    	stage('构建项目') {
      		steps {
        		dir('./VerifyProject/fastlane') {
          			sh 'bundle exec fastlane ios build config:Debug'
        		}
      		}
    	}

    	stage('部署项目') {
      		steps {
        		dir('./VerifyProject/fastlane') {
          			sh 'bundle exec fastlane ios deploy config:Debug'
        		}
      		}
    	}
	}

	post {
   		failure {
			echo '构建失败,你可以调用远程通知，或者发送一个Email'	
			script {
      			def response = httpRequest httpMode:'POST', url:'http://120.77.50.165:8080/project/resoult', requestBody:'buildId=ios&resoult=false' 
      			echo 'status: response.status'
      			echo 'content: response.content'
			}
		}

    	success {
      		echo '构建成功,你可以调用远程通知，或者发送一个Email'
			script {
      			def response = httpRequest httpMode:'POST', url:'http://120.77.50.165:8080/project/resoult', requestBody:'buildId=ios&resoult=true' 
      			echo 'status: response.status'
      			echo 'content: response.content'
			}
		}
	}
}
